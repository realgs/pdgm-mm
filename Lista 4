object laborka extends App {

  def filterToWhatever[A](list: List[List[A]], param: A): List[List[A]] = {
    def filterHelper[A](list: List[List[A]], param: A, acc: List[List[A]]): List[List[A]] = {
      if (list == Nil) return acc
      if (list.head.filter(x => x == param) != Nil) return filterHelper(list.tail, param, list.head :: acc)
      filterHelper(list.tail, param, acc)
    }

    filterHelper(list, param, Nil)
  }


  def convertToWhatever(num: Int, param: Int): List[Int] = {
    def convertHelper(num: Int, param: Int, acc: List[Int]): List[Int] = {
      if (num == 0) acc
      else convertHelper(num / param, param, List(num % param) ++ acc)
    }

    convertHelper(num, param, Nil)
  }
  
  val lista = List(List(1, 2, 3, 1), List(4, 3), List(1, 2), List())
  println(convertToWhatever(13, 2))
  println(filterToWhatever(lista, 3))

}
